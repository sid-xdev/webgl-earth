#version 300 es

uniform mat4 perspectiv_matrix;
uniform mat4 camera_matrix; 
uniform mat4 world_position_matrix;

layout(location = 0) in vec3 in_vertex; 
layout(location = 1) in vec3 in_normal;
layout(location = 2) in vec2 in_uv;

out vec3 position;
out vec3 normal;
out vec2 uv;

void main() 
{ 
	position = ( world_position_matrix * vec4( in_vertex, 1.0F ) ).xyz;
	normal = normalize( ( world_position_matrix * vec4( in_normal, 1.0F ) - world_position_matrix[3] ).xyz );
	uv = in_uv; 
	
	gl_Position = perspectiv_matrix * camera_matrix * vec4( position, 1.0 );
}